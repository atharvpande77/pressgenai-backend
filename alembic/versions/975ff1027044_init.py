"""init

Revision ID: 975ff1027044
Revises: ea60f8830000
Create Date: 2025-09-25 13:12:06.198303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '975ff1027044'
down_revision: Union[str, Sequence[str], None] = 'ea60f8830000'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('country_code', sa.String(length=8), nullable=True),
    sa.Column('level', postgresql.ENUM('CITY', 'STATE', 'COUNTRY', 'INTERNATIONAL', name='location_level'), nullable=False),
    sa.Column('last_fetched_timestamp', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('refresh_interval_mins', sa.Integer(), nullable=True),
    sa.Column('max_days_back', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_index(op.f('ix_locations_last_fetched_timestamp'), 'locations', ['last_fetched_timestamp'], unique=False)
    op.create_table('user_stories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('title_hash', sa.String(length=64), nullable=True),
    sa.Column('context', sa.TEXT(), nullable=True),
    sa.Column('context_hash', sa.String(length=64), nullable=True),
    sa.Column('mode', sa.String(length=20), nullable=True),
    sa.Column('full_text', sa.TEXT(), nullable=True, comment='The full article content for manual mode.'),
    sa.Column('full_text_hash', sa.String(length=64), nullable=True),
    sa.Column('tone', sa.String(length=50), nullable=True),
    sa.Column('style', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('word_length', sa.String(length=20), nullable=True),
    sa.Column('word_length_range', sa.String(length=50), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', postgresql.ENUM('collecting', 'generated', 'submitted', name='user_story_status'), nullable=True),
    sa.Column('publish_status', postgresql.ENUM('pending', 'published', 'rejected', name='user_story_publish_status'), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_stories_context_hash'), 'user_stories', ['context_hash'], unique=True)
    op.create_index(op.f('ix_user_stories_full_text_hash'), 'user_stories', ['full_text_hash'], unique=False)
    op.create_index(op.f('ix_user_stories_id'), 'user_stories', ['id'], unique=False)
    op.create_index(op.f('ix_user_stories_title_hash'), 'user_stories', ['title_hash'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', postgresql.ENUM('creator', 'editor', 'admin', name='user_roles'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_table('authors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bio', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generated_user_stories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_story_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=True),
    sa.Column('snippet', sa.TEXT(), nullable=True),
    sa.Column('full_text', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_story_id'], ['user_stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generated_user_stories_id'), 'generated_user_stories', ['id'], unique=False)
    op.create_table('stories_raw',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=True),
    sa.Column('snippet', sa.TEXT(), nullable=True),
    sa.Column('thumbnail', sa.String(length=300), nullable=True),
    sa.Column('link', sa.String(length=500), nullable=True),
    sa.Column('published_timestamp', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stories_raw_id'), 'stories_raw', ['id'], unique=False)
    op.create_table('user_stories_questions',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_story_id', sa.UUID(), nullable=False),
    sa.Column('question_key', sa.String(length=50), nullable=True),
    sa.Column('question_type', postgresql.ENUM('what', 'who', 'where', 'why', 'when', 'how', 'sources', name='question_type'), nullable=True),
    sa.Column('question_text', sa.TEXT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_story_id'], ['user_stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_stories_questions_id'), 'user_stories_questions', ['id'], unique=False)
    op.create_table('user_stories_answers',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_story_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('answer_text', sa.TEXT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['user_stories_questions.id'], ),
    sa.ForeignKeyConstraint(['user_story_id'], ['user_stories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_story_id', 'question_id', name='unique_user_story_question')
    )
    op.create_index(op.f('ix_user_stories_answers_id'), 'user_stories_answers', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_stories_answers_id'), table_name='user_stories_answers')
    op.drop_table('user_stories_answers')
    op.drop_index(op.f('ix_user_stories_questions_id'), table_name='user_stories_questions')
    op.drop_table('user_stories_questions')
    op.drop_index(op.f('ix_stories_raw_id'), table_name='stories_raw')
    op.drop_table('stories_raw')
    op.drop_index(op.f('ix_generated_user_stories_id'), table_name='generated_user_stories')
    op.drop_table('generated_user_stories')
    op.drop_table('authors')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_stories_title_hash'), table_name='user_stories')
    op.drop_index(op.f('ix_user_stories_id'), table_name='user_stories')
    op.drop_index(op.f('ix_user_stories_full_text_hash'), table_name='user_stories')
    op.drop_index(op.f('ix_user_stories_context_hash'), table_name='user_stories')
    op.drop_table('user_stories')
    op.drop_index(op.f('ix_locations_last_fetched_timestamp'), table_name='locations')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
