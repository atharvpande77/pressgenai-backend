"""made cateogory column enum LOCAL

Revision ID: 8fd44ef5a391
Revises: 3b9ffc61157b
Create Date: 2025-09-30 15:21:28.311633

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from enum import Enum

# revision identifiers, used by Alembic.
revision: str = '8fd44ef5a391'
down_revision: Union[str, Sequence[str], None] = '3b9ffc61157b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class NewsCategory(str, Enum):
    LOCAL_NEWS = "local News"
    INDIA = "india"
    WORLD = "world"
    POLITICS = "politics"
    SPORTS = "sports"
    ENTERTAINMENT = "entertainment"
    CRIME = "crime"
    BUSINESS = "business"
    CIVIC_ISSUES = "civic issues"
    TECHNOLOGY = "technology"
    ENVIRONMENT = "environment"
    CULTURE = "culture"
    GENERAL = "general"

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    all_categories = [category.value for category in NewsCategory]
    news_category_enum = postgresql.ENUM(*all_categories, name="news_category")
    news_category_enum.create(op.get_bind(), checkfirst=True)

    op.alter_column('generated_user_stories', 'category',
               existing_type=sa.VARCHAR(length=50),
               type_=news_category_enum,
               existing_nullable=True,
               postgresql_using='category::news_category')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('generated_user_stories', 'category',
               existing_type=postgresql.ENUM(
                   *[category.value for category in NewsCategory],
                   name='news_category'
               ),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.execute('DROP TYPE IF EXISTS news_category')
    # ### end Alembic commands ###
