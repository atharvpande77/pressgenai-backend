"""added new enums

Revision ID: f9f022ee8432
Revises: f20be71fbed4
Create Date: 2025-09-11 23:11:12.944336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f9f022ee8432'
down_revision: Union[str, Sequence[str], None] = 'f20be71fbed4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    user_story_status_enum = postgresql.ENUM('collecting', 'generated', 'submitted', name="user_story_status")
    user_story_status_enum.create(op.get_bind())
    user_story_publish_status_enum = postgresql.ENUM('pending', 'published', 'rejected', name='user_story_publish_status')
    user_story_publish_status_enum.create(op.get_bind())

    op.execute("ALTER TABLE user_stories ALTER COLUMN status TYPE user_story_status USING status::user_story_status")
    op.execute("ALTER TABLE user_stories ALTER COLUMN publish_status TYPE user_story_publish_status USING publish_status::user_story_publish_status")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_stories', 'publish_status',
               existing_type=postgresql.ENUM('pending', 'published', 'rejected', name='user_story_publish_status'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('user_stories', 'status',
               existing_type=postgresql.ENUM('collecting', 'generated', 'submitted', name='user_story_status'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    user_story_publish_status_enum = postgresql.ENUM('pending', 'published', 'rejected', name='user_story_publish_status')
    user_story_publish_status_enum.drop(op.get_bind())
    user_story_status_enum = postgresql.ENUM('collecting', 'generated', 'submitted', name="user_story_status")
    user_story_status_enum.drop(op.get_bind())
    # ### end Alembic commands ###
